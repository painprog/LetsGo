@model ProfileViewModel
<div id="all-events">
    @foreach (var item in Model.Events)
    {
        <div class="card mb-3 event-card" style="border-radius: 15px" onclick="eventDetails('@item.Id')">
            <div id="event-status" style="display:none;">@item.Status</div>
            <div class="row">
                <div class="pn-page-head col-lg-10" style="border-radius: 0">
                    <img class="blur_img" src="@item.PosterImage" alt="">
                    <div class="row">
                        <div class="col-lg-4 mr-5">
                            <div class="pn-head_image">
                                <img src="@item.PosterImage" alt="" class="rounded">
                            </div>
                        </div>
                        <div class="col-lg-7">
                            <div class="pn-head_title">
                                <h1>@item.Name</h1>
                                <span>@item.AgeLimit +</span>
                            </div>
                            <div class="pn-head_description">
                                <div class="pn-head_text">@item.EventStart.ToShortDateString() @item.EventEnd.ToShortDateString()</div>
                                <div class="pn-head_place">@item.Location.Name</div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2 my-auto text-center sideBox">
                    <h1 style="font-size: 22px;">Билетов</h1>
                    <p>
                        куплено: @item.Sold<br />
                        @{ var remainder = item.TicketLimit - item.Sold;}
                        осталось: <text>@(@item.Count - @item.Sold)</text>
                    </p>
                </div>
            </div>
            <div class="text-center align-content-between admin-event pt-2">
                <div class="row">
                    <div class="col-lg-2">
                        <span>Статус: </span>
                        @switch (item.Status)
                        {
                            case Status.NotDefined:
                                <span>Ошибка</span>
                                break;
                            case Status.Edited:
                                // feature
                                break;
                            case Status.Rejected:
                                <span>Отклонен</span>
                                break;
                            case Status.New:
                                <span>Ожидание принятия</span>
                                break;
                            case Status.Published:
                                <span>Опубликован</span>
                                break;
                            case Status.UnPublished:
                                <span>Снят с публикации</span>
                                break;
                            case Status.ReviewPublished:
                                <span>Ожидание добавления</span>
                                break;
                            case Status.ReviewUnPublished:
                                <span>Ожидание снятия</span>
                                break;
                            case Status.Expired:
                                <span>Мероприятие уже прошло</span>
                                break;
                        }
                    </div>
                    <div class="col-lg-10">
                        @switch (item.Status)
                        {
                            case Status.NotDefined:
                                //to do smth
                                break;
                            case Status.Edited:
                                //to do smth
                                break;
                            case Status.Rejected:
                                <a class="btn btn-danger p-0 px-3 ml-4 mb-2 " asp-controller="Event" asp-action="Edit" asp-route-id="@item.Id"><span class="material-icons my-auto px-3 py-2">edit</span> Отредактировать и отправить снова</a>
                                break;
                            case Status.New:
                                <a class="btn btn-danger p-0 px-3 ml-4 mb-2" asp-controller="Event" asp-action="Edit" asp-route-id="@item.Id"><span class="material-icons my-auto px-3 py-2">edit</span></a>
                                break;
                            case Status.Published:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 requestForUnPublish" id="@item.Id">Отправить заявку: снять с публикации</button>
                                break;
                            case Status.UnPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 requestForPublish" id="@item.Id">Отправить заявку: опубликовать</button><br />
                                break;
                            case Status.ReviewPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 cancelReviewPublish" id="@item.Id">Отменить запрос возвращения</button>
                                break;
                            case Status.ReviewUnPublished:
                                <button type="button" class="btn btn-warning px-3 ml-4 mb-2 cancelReviewUnPublish" id="@item.Id">Отменить запрос снятия</button>
                                break;
                            case Status.Expired:
                                break;
                        }
                    </div>
                </div>
            </div>
            <div class="text-light bg-danger text-center align-content-between admin-event px-2" style="line-height: 40px">
                @if (item.StatusDescription != null && item.StatusDescription != "Ok")
                {
                    @switch (item.Status)
                    {
                        case Status.Published:
                            <span>Отказано в снятии по причине: </span>
                            break;
                        case Status.UnPublished:
                            <span>Отказано в публикации по причине: </span>
                            break;
                        case Status.Rejected:
                            <span>Отказано по причине: </span>
                            break;
                    }
                    <span>@item.StatusDescription</span>
                }
            </div>
        </div>
    }
</div>