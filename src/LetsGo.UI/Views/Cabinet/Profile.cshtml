@model LetsGo.UI.ViewModels.ProfileViewModel
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer _localizer

@{
    ViewData["Title"] = @_localizer["Profiles"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="m-3">
    <h4 class="block-heading">@_localizer["Profiles"]</h4>
    <div class="card mb-4 py-3 mt-2">
        <div class="card-body py-0 row justify-content-lg-between">
            <div class="row justify-content-lg-start justify-content-md-between justify-content-lg-between col col-lg-7">
                <div class="col-lg-2 col-md-3 p-0">
                    <img src="@Model.User.AvatarLink" width="100" height="100" class="rounded-circle" alt="avatar" />
                </div>
                <div class="col-lg-8 col-md-7 p-0">
                    <h5 class="category-header font-weight-bold">@Model.User.Email</h5>
                    <p class="card-text">
                        @if (Model.User.UserName != null)
                        {<span>@_localizer["Login"]: @Model.User.UserName</span>}
                        @if (Model.User.PhoneNumber != null)
                        {<br /><span>@_localizer["PhoneNumber"]: @Model.User.PhoneNumber</span>}
                    </p>
                </div>
            </div>
            <div class="row col col-lg-3 p-0 profile-btns">
                @if (User.IsInRole("superadmin"))
                {
                <a asp-controller="Account" asp-action="AddAdmin" class="btn btn-light float-right col col-sm-12">+ @_localizer["Add"]</a>
                }
            <a asp-action="Edit" asp-controller="Cabinet" asp-route-id="@Model.User.Id" class="btn btn-light float-right col col-sm-12">@_localizer["Edit"]</a>
            </div>
        </div>
    </div>
    <div class="row mt-3 justify-content-md-between justify-content-lg-between justify-content-center events-btns align-items-baseline">
        <div class="row justify-content-start col-12 px-0">
            <div class="col-lg-2 col-4 px-0 mr-5">
                <h4 id="events-link" class="mr-auto block-heading px-0 mb-3 heading-link">@_localizer["Event"]</h4>
            </div>
            @if (User.IsInRole("superadmin") || User.IsInRole("admin"))
            {
                <div class="col-lg-2 col-4 px-0">
                    <h4 id="organizers-link" class="mr-auto block-heading px-0 heading-link">@_localizer["Users"]</h4>
                </div>
            }
        </div>
        <div class="form-outline px-0 col-lg-3 col-md-12 col-12 mb-3">
            <input type="text" id="searchbox-input" class="form-control text-center" placeholder=" @_localizer["Search"]"
                   aria-label="Search" onkeyup="filter()" />
        </div>
        <div id="dropdown" class="dropdown col-2 px-0 mb-3">
            <button class="btn btn-dark dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                @_localizer["Sort"]
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" asp-action="Profile" asp-route-SortOrder="@ViewBag.NameSort">@_localizer["NameSort"]</a>
                <a class="dropdown-item" asp-action="Profile" asp-route-SortOrder="@ViewBag.PriceSort">@_localizer["PriceSort"]</a>
                <a class="dropdown-item" asp-action="Profile" asp-route-SortOrder="@ViewBag.DateStartSort">@_localizer["DateStartSort"]</a>
            </div>
        </div>
        <div id="options" class="col-2 px-0 mb-auto" style="display:none;">
            <div class="form-check form-check-inline" id="notApproved">
              <input class="form-check-input" type="checkbox" id="requests" value="requests">
              <label class="form-check-label" for="requests">@_localizer["Requests"]</label>
            </div><br />
            <div class="form-check form-check-inline" id="approved">
              <input class="form-check-input" type="checkbox" id="approvedUsers" value="approvedUsers">
              <label class="form-check-label" for="approvedUsers">@_localizer["ApprovedUsers"]</label>
            </div>
        </div>
        @if (User.IsInRole("superadmin"))
        {
            <a asp-controller="Locations" asp-action="Create" class="btn btn-danger float-right col-lg-3 col-md-4 col-12 mb-2 mr-1">
                + @_localizer["AddLocation"]
            </a>
        }
        <a asp-controller="Event" asp-action="Add" class="btn btn-danger float-right col-lg-3 col-md-4 col-12">
            + @_localizer["AddEvent"]
        </a>
    </div>
    <div class="row">
        <div class="col events-container mb-5 px-0">
            @if (Model.IsOrganizer)
            {
                await Html.RenderPartialAsync("/Views/Cabinet/PartialViews/_OrganizerPartial.cshtml", Model);
            }
            else
            {
                await Html.RenderPartialAsync("/Views/Cabinet/PartialViews/_AdminPartial.cshtml", Model);
            }

        </div>
        
        <div class="col card mb-5 h-100 col-xl-3 col-md-4 col-sm-6 col-9 ml-3" id="dd">
            <p class="text-center font-weight-bold py-2" style="font-size: 22px;"> @_localizer["Filters"]</p>
            <div id="Filter">
                <form asp-controller="Cabinet" asp-action="Profile" method="get" id="formFilter">
                    <div class="categories ml-1">
                        <p class="font-weight-bold"> @_localizer["Category"]:</p>
                        @foreach (var category in Model.CategoriesDictionary[-1])
                        {
                            <div class="category-checkbox">
                                @if (Model.selectedCategories.Contains(category.Id.ToString()))
                                {
                                    <input type="checkbox" value="@category.Id" id="category-@category.Id" checked />
                                }
                                else
                                {
                                    <input type="checkbox" value="@category.Id" id="category-@category.Id" />
                                }
                                <label class="forcheckbox" for="category-@category.Id">@category.Name</label>
                            </div>
                            @if (Model.CategoriesDictionary.ContainsKey(category.Id))
                            {
                                <div class="ml-4">
                                    <i style="display: none " id="selected-subcategories-@category.Id">0</i>
                                    @foreach (var subcategory in Model.CategoriesDictionary[category.Id])
                                    {
                                <div class="subcategory-checkbox">
                                    @if (Model.selectedCategories.Contains(subcategory.Id.ToString()))
                                    {
                                        <input type="checkbox" value="@subcategory.Id" id="subcategory-@subcategory.Id" onclick="ClickSubcategory(this, @category.Id)" checked />
                                    }
                                    else
                                    {
                                        <input type="checkbox" value="@subcategory.Id" id="subcategory-@subcategory.Id" onclick="ClickSubcategory(this, @category.Id)" />
                                    }
                                    <label class="forcheckbox" for="subcategory-@subcategory.Id">@subcategory.Name</label>
                                </div>
                                    }
                                </div>
                            }
                        }
                    </div>
                    <div class="ml-1">
                        <p class="font-weight-bold">@_localizer["Status"]:</p>
                        <select class="form-select my-1" asp-for="@Model.Status" aria-label="Default select example">
                            @for (int i = 0; i < Model.Stats.Keys.Count; i++)
                            {
                                <option value="@Model.Stats.ElementAt(i).Value">@Model.Stats.ElementAt(i).Key</option>
                            }
                        </select>
                    </div>
                    <div class="datetimes ml-1 fw-bold">
                        <p class="font-weight-bold">@_localizer["DateStart"]:</p>
                        <div class="row g-3 align-items-center">
                            <div class="col-auto">
                                <label for="dateFrom" class="col-form-label"> @_localizer["From"]</label>
                            </div>
                            <div class="col-auto">
                                <input id="dateFrom" type="datetime-local" asp-for="@Model.DateTimeFrom" class="form-control input-field">
                            </div>
                        </div>
                        <div class="row g-3 align-items-center">
                            <div class="col-auto">
                                <label for="dateBefore" class="col-form-label"> @_localizer["To"]</label>
                            </div>
                            <div class="col-auto">
                                <input id="dateBefore" type="datetime-local" asp-for="@Model.DateTimeBefore" class="form-control input-field">
                            </div>
                        </div>
                    </div>
                    <input asp-for="selectedCategories" hidden />
                    <div class="form-group text-center">
                        <button type="submit" class="btn btn-danger px-5 py-2 mt-2"> @_localizer["Show"]</button>
                        <input type="reset" value="Сбросить" class="btn btn-outline-danger px-5 py-2 pt-2 mt-2" onclick="Reset()" />
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>


<div class="position-fixed p-3" style="z-index: 11; position: sticky; top: 60px; right:0;">
    <div class="toast align-items-center text-dark bg-white rounded border-1 badge-dark"
         role="alert" aria-live="assertive" aria-atomic="true" data-autohide="false">
        <div class="toast-header">
            <strong class="mr-auto">LetsGo</strong>
            <button type="button" class="ml-auto mb-1 close" data-dismiss="toast" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="toast-body"></div>
    </div>
</div>





@section Scripts
{
    <script>

        function ChangeStatus(button, newStatus) {
            event.stopPropagation();
            // log
            console.log(button);
            console.log(button.id);
            console.log(newStatus);
            //
            $.ajax({
                url: '@Url.Action("ChangeStatus", "Event")',
                type: 'POST',
                data:
                {
                    'status': newStatus,
                    'eventId': button.id
                },
                success: function (response) {
                    if (response.success) {
                        $(button).closest('.card').hide('fast');
                    }
                }
            })
        }

        let _id;
        let _status;
        let _div;
        let _button;
        let _email;
        function ChangeDenyStatus(button, newStatus) {
            event.stopPropagation();
            // log
            console.log(button.id);
            //
            _id = button.id;
            _status = newStatus;
        }
        function ChangeDenyUserStatus(button, email) {
            event.stopPropagation();
            // log
            console.log(email);
            //
            _button = button;
            _email = email;
            _id = 'user';
        }

        $('#cause-confirm').on('click', () => {
            event.preventDefault();
            let cause = $('textarea#cause-text').val();
            $('textarea#cause-text').val('');
            if(_id == 'user')
            {
                console.log(_email, cause, _button);
                DeleteAccount(_email, _button, cause);
            }
            else
            {
                console.log(_id, _status, cause);
                $.ajax({
                    url: '@Url.Action("ChangeStatus", "Event")',
                    type: 'POST',
                    data:
                    {
                        'status': _status,
                        'eventId': _id,
                        'cause': cause
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#' + _id).closest('.card').hide('fast');
                        }
                    }
                });
            }    
        });

        function disableCard(elem) {
            $(elem).closest('card').prop('disabled', true);
        }

        function eventDetails(eventId) {
            window.location.href = '@Url.Action("Details","Event")?id=' + eventId;
        }

        function eventEdit(eventId) {
            event.stopPropagation();
            window.location.href = '@Url.Action("Edit","Event")?id=' + eventId;
        }

        //фильтрация

        let eventCategs = [];
        let strCateg;
        $('#formFilter').on("submit", function Filter() {
            $('.categories input:checked').each(function Fill() {
                eventCategs.push($(this).val())
            })
            strCateg = eventCategs.join()
            $('#selectedCategories').val(strCateg)
        }
        )
        function Sort(sortState) {
            $('#SortStateHidden').val(sortState);
            console.log($('#SortStateHidden').val());
            $('#formFilter').submit();
        }


        function ClickSubcategory(subcategory, id) {
            var count = $('#selected-subcategories-' + id);
            if ($(subcategory).is(':checked')) count.text(parseInt(count.text()) + 1);
            else count.text(parseInt(count.text()) - 1);
            $('#category-' + id).prop('checked', parseInt(count.text()));
        }

        function Reset() {
            $('input[type="checkbox"]').removeAttr('checked');
            $('input[type="datetime-local"]').each(function () { console.log($(this).val()); $(this).val('0001-01-01T00:00:00.000'); console.log($(this).val()); });
        }


         $('.btn-loadmore-organizers').hide();

        $(document).ready(function () {
            var maxLength = 150;
            $(".self-info").each(function () {
                var myStr = $(this).text();
                if ($.trim(myStr).length > maxLength) {
                    var newStr = myStr.substring(0, maxLength);
                    var removedStr = myStr.substring(maxLength, $.trim(myStr).length);
                    $(this).empty().html(newStr);
                    $(this).append(' <a href="javascript:void(0);" class="read-more font-weight-bold text-decoration-none">...</a>');
                    $(this).append('<span class="more-text" style="display:none">'+ removedStr +'</span>');
                }
            });
            $(".read-more").click(function () {
                $(this).siblings(".more-text").contents().unwrap();
                $(this).remove();
            });
        });

        $('#approved #approvedUsers').on('click', () => {
            if(!$('#approved #approvedUsers').prop('checked'))
            {
                $(this).prop('checked', false);
                console.log('unchecked');
                $('#all-organizers #ApprovedTrue').each(function () {
                    $(this).closest('.card').hide('fast');
                });
            }
            else
            {
                $(this).prop('checked', true);
                console.log('checked');
                $('#all-organizers #ApprovedTrue').each(function () {
                    $(this).closest('.card').show('fast');
                });
            }
        });
        $('#notApproved #requests').on('click', () => {
            if(!$('#notApproved #requests').prop('checked'))
            {
                $(this).prop('checked', false);
                console.log('unchecked');
                $('#all-organizers #ApprovedFalse').each(function () {
                    $(this).closest('.card').hide('fast');
                });
            }
            else
            {
                $(this).prop('checked', true);
                console.log('checked');
                $('#all-organizers #ApprovedFalse').each(function () {
                    $(this).closest('.card').show('fast');
                });
            }
        });

        function ApproveAccount(email, button) {
            event.stopPropagation();
            // log
            console.log(email);
            $(button).closest('.card').hide('fast');
            $.ajax({
                url: '@Url.Action("Approve", "Cabinet")',
                type: 'POST',
                data: {'email': email},
                success: function (response) {
                    if (response.success) {
                        console.log("approved");
                    }
                }
            });
        };
        function DeleteAccount(email, button, cause) {
            event.stopPropagation();
            // log
            console.log(email);
            $(button).closest('.card').hide('fast');
            $.ajax({
                url: '@Url.Action("DeleteUser", "Cabinet")',
                type: 'POST',
                data: {
                    'email': email,
                    'cause': cause
                },
                success: function (response) {
                    if (response.success) {
                        console.log("deleted");
                    }
                }
            });
        };

        function userEdit(userId) {
            event.stopPropagation();
            window.location.href = '@Url.Action("Edit","Cabinet")?id=' + userId;
        }
    </script>
}